{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-evon\\\\my-app\\\\src\\\\component\\\\tictactoe\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useState } from \"react\";\nimport CalculatedWinner from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyle.css\"; // const Game = () => {\n//   const [board, setBoard] = useState(Array(9).fill(null)); //board là tên biến giá trị mặc định, setBoard là dùng để tính toán, usestate truyền vào cho 9 cái giá trị là null để sau này dùng setBoard mà tính toán\n//   const [xIsNext, setXIsNext] = useState(true);\n//   const winner = CalculatedWinner(board);\n//   const handleClick = (index) => {\n//     const boardCopy = [...board];\n//     if (winner || boardCopy[index]) return;\n//     boardCopy[index] = xIsNext ? \"X\" : \"O\";\n//     setBoard(boardCopy);\n//     setXIsNext((xIsNext) => !xIsNext);\n//   };\n//   const handleResetGame = () => {\n//     setBoard(Array(9).fill(null));\n//     setXIsNext(true);\n//   };\n//   return (\n//     <div>\n//       {/* thằng board là props truyền vào cho Board */}\n//       <Board cells={board} onClick={handleClick}></Board>\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\n//       <button className=\"button\" onClick={handleResetGame}>\n//         Reset game\n//       </button>\n//     </div>\n//   );\n// };\n//=============================== TIC TAC TOE WITH USE REDUCER ==========================//\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  board: Array(9).fill(null),\n  xIsNext: true\n};\nconst action = {\n  type: \"CLICK\",\n  payload: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"CLICK\":\n      {\n        const {\n          board,\n          xIsNext\n        } = state;\n        const nextState = JSON.parse(JSON.stringify(state)); // next state này clone ra để set giá trị, ko gây ảnh hưởng giá trị ban đầu\n\n        const {\n          index,\n          winner\n        } = action.payload;\n        if (winner || board[index]) return state;\n        console.log(nextState);\n        nextState.board[index] = xIsNext ? \"X\" : \"O\";\n        nextState.xIsNext = !xIsNext; // dòng này để set cái bước tiếp theo khác với giá trị bước trước đó <=> \"X\" != \"O\"\n\n        return nextState;\n      }\n\n    case \"RESET\":\n      {\n        const resetState = JSON.parse(JSON.stringify(state));\n        resetState.board = Array(9).fill(null); //set cho 9 thằng về null => giao diện trắng\n\n        resetState.xIsNext = true; // set cho bước đi sau khi reset có thể click đc\n\n        return resetState;\n      }\n\n    default:\n      throw new Error(\"invalid value\");\n  }\n};\n\nconst Game = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const winner = CalculatedWinner(state.board);\n\n  const handleOnclick = index => {\n    dispatch({\n      type: \"CLICK\",\n      payload: {\n        index,\n        winner\n      }\n    });\n  };\n\n  const handleResetGame = () => {\n    dispatch({\n      type: \"RESET\",\n      payload: {\n        state\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: state.board,\n      onClick: handleOnclick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: [\"Winner is \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleResetGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/React-evon/my-app/src/component/tictactoe/Game.js"],"names":["React","useReducer","useState","CalculatedWinner","Board","initialState","board","Array","fill","xIsNext","action","type","payload","reducer","state","nextState","JSON","parse","stringify","index","winner","console","log","resetState","Error","Game","dispatch","handleOnclick","handleResetGame"],"mappings":"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","sourcesContent":["import React, { useReducer, useState } from \"react\";\r\nimport CalculatedWinner from \"../../helpers\";\r\nimport Board from \"./Board\";\r\nimport \"./GameStyle.css\";\r\n\r\n// const Game = () => {\r\n//   const [board, setBoard] = useState(Array(9).fill(null)); //board là tên biến giá trị mặc định, setBoard là dùng để tính toán, usestate truyền vào cho 9 cái giá trị là null để sau này dùng setBoard mà tính toán\r\n//   const [xIsNext, setXIsNext] = useState(true);\r\n//   const winner = CalculatedWinner(board);\r\n\r\n//   const handleClick = (index) => {\r\n//     const boardCopy = [...board];\r\n//     if (winner || boardCopy[index]) return;\r\n//     boardCopy[index] = xIsNext ? \"X\" : \"O\";\r\n//     setBoard(boardCopy);\r\n//     setXIsNext((xIsNext) => !xIsNext);\r\n//   };\r\n\r\n//   const handleResetGame = () => {\r\n//     setBoard(Array(9).fill(null));\r\n//     setXIsNext(true);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//       {/* thằng board là props truyền vào cho Board */}\r\n//       <Board cells={board} onClick={handleClick}></Board>\r\n//       {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n//       <button className=\"button\" onClick={handleResetGame}>\r\n//         Reset game\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n//=============================== TIC TAC TOE WITH USE REDUCER ==========================//\r\nconst initialState = {\r\n  board: Array(9).fill(null),\r\n  xIsNext: true,\r\n};\r\nconst action = {\r\n  type: \"CLICK\",\r\n  payload: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CLICK\": {\r\n      const { board, xIsNext } = state;\r\n      const nextState = JSON.parse(JSON.stringify(state)); // next state này clone ra để set giá trị, ko gây ảnh hưởng giá trị ban đầu\r\n      const { index, winner } = action.payload;\r\n      if (winner || board[index]) return state;\r\n\r\n      console.log(nextState);\r\n      nextState.board[index] = xIsNext ? \"X\" : \"O\";\r\n      nextState.xIsNext = !xIsNext; // dòng này để set cái bước tiếp theo khác với giá trị bước trước đó <=> \"X\" != \"O\"\r\n\r\n      return nextState;\r\n    }\r\n\r\n    case \"RESET\": {\r\n      const resetState = JSON.parse(JSON.stringify(state));\r\n      resetState.board = Array(9).fill(null); //set cho 9 thằng về null => giao diện trắng\r\n      resetState.xIsNext = true; // set cho bước đi sau khi reset có thể click đc\r\n      return resetState;\r\n    }\r\n    default:\r\n      throw new Error(\"invalid value\");\r\n  }\r\n};\r\n\r\nconst Game = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const winner = CalculatedWinner(state.board);\r\n\r\n  const handleOnclick = (index) => {\r\n    dispatch({\r\n      type: \"CLICK\",\r\n      payload: {\r\n        index,\r\n        winner,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleResetGame = () => {\r\n    dispatch({\r\n      type: \"RESET\",\r\n      payload: {\r\n        state,\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Board cells={state.board} onClick={handleOnclick}></Board>\r\n      {winner && <div className=\"game-winner\">Winner is {winner}</div>}\r\n      <button className=\"button\" onClick={handleResetGame}>\r\n        Reset game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}