{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport default function useHover() {\n  _s();\n\n  // mouseover\n  // mouseout\n  const [hovered, setHovered] = useState(false);\n  const nodeRef = useRef(null);\n  useEffect(() => {\n    function handleMouseOver() {\n      setHovered(true);\n    }\n\n    function handleMouseOut() {\n      setHovered(false);\n    }\n\n    const dom = nodeRef.current;\n\n    if (dom) {\n      dom.addEventListener(\"mouseover\", handleMouseOver);\n      dom.addEventListener(\"mouseout\", handleMouseOut);\n    }\n\n    return () => {\n      dom && dom.removeEventListener(\"mouseover\", handleMouseOver);\n      dom && dom.removeEventListener(\"mouseout\", handleMouseOut);\n    };\n  }, []);\n  return {\n    hovered,\n    nodeRef\n  };\n}\n\n_s(useHover, \"nN7fQHnfRmhvh/YaV1JfAdEQroc=\");","map":{"version":3,"sources":["D:/React-evon/my-app/src/hooks/useHover.js"],"names":["useEffect","useRef","useState","useHover","hovered","setHovered","nodeRef","handleMouseOver","handleMouseOut","dom","current","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AACA;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMI,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASO,eAAT,GAA2B;AACzBF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACD,aAASG,cAAT,GAA0B;AACxBH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACD,UAAMI,GAAG,GAAGH,OAAO,CAACI,OAApB;;AACA,QAAID,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACE,gBAAJ,CAAqB,WAArB,EAAkCJ,eAAlC;AACAE,MAAAA,GAAG,CAACE,gBAAJ,CAAqB,UAArB,EAAiCH,cAAjC;AACD;;AACD,WAAO,MAAM;AACXC,MAAAA,GAAG,IAAIA,GAAG,CAACG,mBAAJ,CAAwB,WAAxB,EAAqCL,eAArC,CAAP;AACAE,MAAAA,GAAG,IAAIA,GAAG,CAACG,mBAAJ,CAAwB,UAAxB,EAAoCJ,cAApC,CAAP;AACD,KAHD;AAID,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,SAAO;AACLJ,IAAAA,OADK;AAELE,IAAAA;AAFK,GAAP;AAID;;GA1BuBH,Q","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useHover() {\r\n  // mouseover\r\n  // mouseout\r\n  const [hovered, setHovered] = useState(false);\r\n  const nodeRef = useRef(null);\r\n  useEffect(() => {\r\n    function handleMouseOver() {\r\n      setHovered(true);\r\n    }\r\n    function handleMouseOut() {\r\n      setHovered(false);\r\n    }\r\n    const dom = nodeRef.current;\r\n    if (dom) {\r\n      dom.addEventListener(\"mouseover\", handleMouseOver);\r\n      dom.addEventListener(\"mouseout\", handleMouseOut);\r\n    }\r\n    return () => {\r\n      dom && dom.removeEventListener(\"mouseover\", handleMouseOver);\r\n      dom && dom.removeEventListener(\"mouseout\", handleMouseOut);\r\n    };\r\n  }, []);\r\n  return {\r\n    hovered,\r\n    nodeRef,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}