{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-evon\\\\my-app\\\\src\\\\component\\\\counter\\\\counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  //stale state(trạng thái cũ) : là hiện tượng giá trị không phản ánh đúng thực tế, cách fix là sử dụng call back để khiến giá trị sau được tính bằng giá trị trước\n  const [count, setCount] = useState(0); // const handleIncreament = () => {\n  //   setTimeout(function delay() {\n  //     setCount((count) => count + 1);\n  //   }, 1000);\n  // };\n  // return <div onClick={handleIncreament}>Increasement {count}</div>;\n  // DEPENDENCIES\n\n  const [info, setInfo] = useState({\n    firstName: \"le\",\n    lastName: \"khai\"\n  });\n  useEffect(() => {\n    console.log(count);\n  }, []);\n  useEffect(() => {\n    console.log(\"from input\");\n  }, [info.firstName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 flex gap-x-4 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-2x1 font-bold\",\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      },\n      className: \"inline-block bg-green-400 text-white p-3\",\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 items-center gap-x-4 flex\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: info.firstName,\n        onChange: e => setInfo({ ...info,\n          firstName: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"Jo2+eMFJSUY/3hk157rIIuHR4ag=\");\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["D:/React-evon/my-app/src/component/counter/counter.js"],"names":["React","useEffect","useState","Counter","count","setCount","info","setInfo","firstName","lastName","console","log","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC,CAFoB,CAGpB;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC/BM,IAAAA,SAAS,EAAE,IADoB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAFQ,EAEN,CAACL,IAAI,CAACE,SAAN,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA,gBAAsCJ;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OAHH;AAIE,MAAA,SAAS,EAAC,0CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,KAAK,EAAEE,IAAI,CAACE,SAHd;AAIE,QAAA,QAAQ,EAAGI,CAAD,IACRL,OAAO,CAAC,EACN,GAAGD,IADG;AAENE,UAAAA,SAAS,EAAEI,CAAC,CAACC,MAAF,CAASC;AAFd,SAAD;AALX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAlDD;;GAAMX,O;;KAAAA,O;AAoDN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst Counter = () => {\r\n  //stale state(trạng thái cũ) : là hiện tượng giá trị không phản ánh đúng thực tế, cách fix là sử dụng call back để khiến giá trị sau được tính bằng giá trị trước\r\n  const [count, setCount] = useState(0);\r\n  // const handleIncreament = () => {\r\n  //   setTimeout(function delay() {\r\n  //     setCount((count) => count + 1);\r\n  //   }, 1000);\r\n  // };\r\n  // return <div onClick={handleIncreament}>Increasement {count}</div>;\r\n\r\n  // DEPENDENCIES\r\n  const [info, setInfo] = useState({\r\n    firstName: \"le\",\r\n    lastName: \"khai\",\r\n  });\r\n  useEffect(() => {\r\n    console.log(count);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"from input\");\r\n  }, [info.firstName]);\r\n\r\n  return (\r\n    <div className=\"p-5 flex gap-x-4 items-center\">\r\n      <span className=\"text-2x1 font-bold\">{count}</span>\r\n      <button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n        className=\"inline-block bg-green-400 text-white p-3\"\r\n      >\r\n        Increment\r\n      </button>\r\n\r\n      <div className=\"p-5 items-center gap-x-4 flex\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={info.firstName}\r\n          onChange={(e) =>\r\n            setInfo({\r\n              ...info,\r\n              firstName: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}